Pulling https://github.com/vaskers5/IS-2020-prog-2-sem/homework2
Pull finished
polynomial.cpp: In function 'std::ostream& operator<<(std::ostream&, const Polynomial&)':
polynomial.cpp:229:1: error: version control conflict marker in file
  229 | =======
      | ^~~~~~~
polynomial.cpp:234:24: error: cannot call constructor 'Polynomial::Polynomial' directly [-fpermissive]
  234 | Polynomial::Polynomial() {
      |                        ^
polynomial.cpp:234:24: note: for a function-style cast, remove the redundant '::Polynomial'
polynomial.cpp:234:25: error: expected ';' before '{' token
  234 | Polynomial::Polynomial() {
      |                         ^~
      |                         ;
polynomial.cpp:244:24: error: expected primary-expression before 'int'
  244 | Polynomial::Polynomial(int min, int max, const int *poly) {
      |                        ^~~
polynomial.cpp:244:33: error: expected primary-expression before 'int'
  244 | Polynomial::Polynomial(int min, int max, const int *poly) {
      |                                 ^~~
polynomial.cpp:244:42: error: expected primary-expression before 'const'
  244 | Polynomial::Polynomial(int min, int max, const int *poly) {
      |                                          ^~~~~
polynomial.cpp:244:57: error: cannot call constructor 'Polynomial::Polynomial' directly [-fpermissive]
  244 | Polynomial::Polynomial(int min, int max, const int *poly) {
      |                                                         ^
polynomial.cpp:244:57: note: for a function-style cast, remove the redundant '::Polynomial'
polynomial.cpp:254:25: error: no matching function for call to 'Polynomial::~Polynomial()'
  254 | Polynomial::~Polynomial() {
      |                         ^
polynomial.cpp:26:1: note: candidate: 'Polynomial::~Polynomial()'
   26 | Polynomial::~Polynomial() {
      | ^~~~~~~~~~
polynomial.cpp:26:1: note:   candidate expects 1 argument, 0 provided
polynomial.cpp:258:24: error: expected primary-expression before 'const'
  258 | Polynomial::Polynomial(const Polynomial &another) {
      |                        ^~~~~
polynomial.cpp:258:49: error: cannot call constructor 'Polynomial::Polynomial' directly [-fpermissive]
  258 | Polynomial::Polynomial(const Polynomial &another) {
      |                                                 ^
polynomial.cpp:258:49: note: for a function-style cast, remove the redundant '::Polynomial'
polynomial.cpp:269:34: error: qualified-id in declaration before '(' token
  269 | Polynomial &Polynomial::operator=(const Polynomial &another) {
      |                                  ^
polynomial.cpp:280:27: error: qualified-id in declaration before '(' token
  280 | int Polynomial::operator[](int number) const {
      |                           ^
polynomial.cpp:286:28: error: qualified-id in declaration before '(' token
  286 | int &Polynomial::operator[](int number) {
      |                            ^
polynomial.cpp:292:22: error: qualified-id in declaration before '(' token
  292 | void Polynomial::make(int new_min_pow, int new_max_pow) {
      |                      ^
polynomial.cpp:305:28: error: qualified-id in declaration before '(' token
  305 | bool Polynomial::operator==(const Polynomial &second) const {
      |                            ^
polynomial.cpp:312:28: error: qualified-id in declaration before '(' token
  312 | bool Polynomial::operator!=(const Polynomial &second) const {
      |                            ^
polynomial.cpp:317:33: error: qualified-id in declaration before '(' token
  317 | Polynomial Polynomial::operator+(const Polynomial &second) const {
      |                                 ^
polynomial.cpp:326:35: error: qualified-id in declaration before '(' token
  326 | Polynomial &Polynomial::operator+=(const Polynomial &second) {
      |                                   ^
polynomial.cpp:352:33: error: qualified-id in declaration before '(' token
  352 | Polynomial Polynomial::operator-() const {
      |                                 ^
polynomial.cpp:360:33: error: qualified-id in declaration before '(' token
  360 | Polynomial Polynomial::operator-(const Polynomial &second) const {
      |                                 ^
polynomial.cpp:365:36: error: qualified-id in declaration before '(' token
  365 | Polynomial & Polynomial::operator-=(const Polynomial &second) {
      |                                    ^
polynomial.cpp:370:48: error: a function-definition is not allowed here before '{' token
  370 | Polynomial operator*(int number, Polynomial D) {
      |                                                ^
polynomial.cpp:377:34: error: qualified-id in declaration before '(' token
  377 | Polynomial Polynomial::operator*=(int number) {
      |                                  ^
polynomial.cpp:381:73: error: a function-definition is not allowed here before '{' token
  381 | Polynomial operator*(const Polynomial &first, const Polynomial &second) {
      |                                                                         ^
polynomial.cpp:395:61: error: a function-definition is not allowed here before '{' token
  395 | Polynomial operator/(const Polynomial &another, int number) {
      |                                                             ^
polynomial.cpp:404:34: error: qualified-id in declaration before '(' token
  404 | Polynomial Polynomial::operator/=(int number) const {
      |                                  ^
polynomial.cpp:409:23: error: qualified-id in declaration before '(' token
  409 | double Polynomial::get(int number) {
      |                       ^
polynomial.cpp:419:59: error: a function-definition is not allowed here before '{' token
  419 | ostream &operator<<(ostream &output, const Polynomial &D) {
      |                                                           ^
polynomial.cpp:458:1: error: expected '}' at end of input
  458 | }
      | ^
polynomial.cpp:191:59: note: to match this '{'
  191 | ostream &operator<<(ostream &output, const Polynomial &D) {
      |                                                           ^
make: *** [makefile:2: all] Error 1



